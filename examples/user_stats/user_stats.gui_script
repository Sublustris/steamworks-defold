local rpg = require "gooey.themes.rpg.rpg"
local monarch = require "monarch.monarch"

function init(self)
	msg.post(".", "acquire_input_focus")

	local status, error = pcall(steamworks.init)
	if not status then print("Error: " .. error) return end

	steamworks.set_listener(function(self, e, t)
		print("listener event", e)
		pprint(t)
		if e == "UserStatsReceived_t" then
			msg.post("#", "refresh_user_stats")
			msg.post("#", "refresh_user_achievements")
		elseif e == "GlobalStatsReceived_t" then
			msg.post("#", "refresh_global_stats")
		end
	end)

	local user_id = steamworks.user_get_steam_id()
	--steamworks.user_stats_request_user_stats(user_id)
	steamworks.user_stats_request_current_stats()
	steamworks.user_stats_request_global_stats(7)
end

function final(self)
	steamworks.final()
end

function update(self, dt)
	steamworks.update()
end

function on_input(self, action_id, action)
	rpg.button("back", action_id, action, function()
		monarch.back()
	end)
	rpg.button("num_games_add", action_id, action, function()
		local ok, num_games = steamworks.user_stats_get_stat_int("NumGames")
		if ok then
			steamworks.user_stats_set_stat_int("NumGames", num_games + 1)
			steamworks.user_stats_store_stats()
			msg.post("#", "refresh_user_stats")
			msg.post("#", "refresh_user_achievements")
		end
	end)
	rpg.button("feet_traveled_add", action_id, action, function()
		local ok, feet_traveled = steamworks.user_stats_get_stat_float("FeetTraveled")
		if ok then
			steamworks.user_stats_set_stat_float("FeetTraveled", feet_traveled + math.random(100,10000) / 100)
			steamworks.user_stats_store_stats()
			msg.post("#", "refresh_user_stats")
			msg.post("#", "refresh_user_achievements")
		end
	end)
	rpg.button("reset_stats", action_id, action, function()
		local ok = steamworks.user_stats_reset_all_stats(true)
		if ok then
			msg.post("#", "refresh_user_stats")
			msg.post("#", "refresh_user_achievements")
		end
	end)
	rpg.button("unlock_win_one", action_id, action, function()
		local ok = steamworks.user_stats_set_achievement("ACH_WIN_ONE_GAME")
		if ok then
			msg.post("#", "refresh_user_achievements")
		end
	end)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("refresh_user_stats") then
		local ok, num_games = steamworks.user_stats_get_stat_int("NumGames")
		if ok then
			gui.set_text(gui.get_node("num_games"), ("Num Games: %d"):format(num_games))
		else
			gui.set_text(gui.get_node("num_games"), "Num Games: error")
		end

		local ok, feet_traveled = steamworks.user_stats_get_stat_float("FeetTraveled")
		if ok then
			gui.set_text(gui.get_node("feet_traveled"), ("Feet traveled: %.2f ft"):format(feet_traveled))
		else
			gui.set_text(gui.get_node("feet_traveled"), "Feet traveled: error")
		end
	elseif message_id == hash("refresh_user_achievements") then
		local achievement_count = steamworks.user_stats_get_num_achievements()
		local s = ""
		for i=0,achievement_count - 1 do
			local api_name = steamworks.user_stats_get_achievement_name(i)
			print(api_name)
			local ok, achieved = steamworks.user_stats_get_achievement(api_name)
			if ok then
				local name = steamworks.user_stats_get_achievement_display_attribute(api_name, "name")
				local ok, percent = steamworks.user_stats_get_achievement_achieved_percent(api_name)
				s = s .. ("%s (%.2f%%) %s\n"):format(name, percent, achieved and "UNLOCKED" or "LOCKED")
			end
		end
		gui.set_text(gui.get_node("achievements"), s)
	elseif message_id == hash("refresh_global_stats") then
		--local ok, stat = steamworks.user_stats_get_global_stat()
		gui.set_text(gui.get_node("global_stats"), "")
	end
end